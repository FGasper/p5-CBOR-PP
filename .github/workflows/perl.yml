name: perl

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

env:
  PERL_USE_UNSAFE_INC: 0
  AUTHOR_TESTING: 1
  AUTOMATED_TESTING: 1
  RELEASE_TESTING: 1
  PERL_CARTON_PATH: $GITHUB_WORKSPACE/local

jobs:
  linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.36'
          - '5.34'
          - '5.32'
          - '5.30'
          - '5.28'
          - '5.26'
          - '5.24'
          - '5.22'
          - '5.20'
          - '5.18'
          - '5.16'
          - '5.14'
          - '5.12'
          - '5.10'

    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@main
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: cpanm --notest --installdeps --with-develop --with-configure --with-recommends .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvmb t

  linux-alt-perl:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        perl-version:
          - '5.020.003'
          - '5.024.004'
          - '5.026.003'
          - '5.028.003'
          - '5.030.003'
          - '5.032.001'
        build-config:
          - main-longdouble-buster
          - main-quadmath-buster

    container:
      image: simcop2387/perl-tester:${{ matrix.perl-version }}-${{ matrix.build-config }}

    steps:
      - uses: actions/checkout@main
        with:
            submodules: recursive
      - run: perl -V
      - run: apt update
      - run: apt install -y curl
      - run: curl -L https://cpanmin.us | perl - --notest --installdeps .
      - run: perl Makefile.PL
      - run: make
      - run: prove -wlvmb t

  mac:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Perl
        run: brew install perl
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: curl -L https://cpanmin.us | perl - --notest --installdeps --installdeps --with-develop --with-configure --with-recommends .
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run tests (with coverage)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://cpanmin.us | perl - --notest Devel::Cover::Report::Coveralls
          `perl -MConfig -E'print $Config::Config{"sitebin"}'`/cover -test -report Coveralls

  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@main
      - name: Set up Perl
        run: |
          choco install strawberryperl
          echo "C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin" >> $GITHUB_PATH
      - name: perl -V
        run: perl -V
      - name: Install Dependencies
        run: curl -L https://cpanmin.us | perl - --notest --installdeps --with-configure --with-develop .   # no recommends
      - name: perl Makefile.PL
        run: perl Makefile.PL
      - name: make
        run: make
      - name: Run Tests
        run: prove -wlvm t

  cygwin:
    runs-on: windows-latest

    steps:
      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@master
        with:
            platform: x64
            packages: perl_base perl-ExtUtils-MakeMaker make gcc-g++ libcrypt-devel bash libnsl-devel
      - uses: actions/checkout@main
      - run: perl -V
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - run: cpan -T App::cpanminus
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: Install Dependencies
        run: cd $GITHUB_WORKSPACE; cpanm --verbose --notest --installdeps --with-configure --with-recommends --with-develop .
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: perl Makefile.PL
        run: cd $GITHUB_WORKSPACE; perl Makefile.PL
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
      - name: make test
        run: cd $GITHUB_WORKSPACE; make test
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
